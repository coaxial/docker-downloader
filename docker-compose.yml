version: '3'
services:
  proxy:
    image: "nginx:${NGINX_VERSION}-alpine"
    restart: always
    ports:
      - "${HOST_IP}:80:80"
    volumes:
      - ./files/downloader.conf:/etc/nginx/conf.d/downloader.conf:ro
      - ./files/default.conf:/etc/nginx/conf.d/default.conf:ro
    healthcheck:
      test: "wget -q -O- http://localhost:8080/healthcheck/ || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - series
      - movies
      - music
      - nzb
      - torrent
      - torrent_aggregator

  series:
    environment:
      TZ: "${TZ}"
      PGID: "${PGID}"
      PUID: "${PUID}"
    image: "linuxserver/sonarr:${SONARR_TAG}"
    restart: always
    volumes:
      - sonarr_config:/config
      # where the tv shows are stored after being processed
      - series:/tv
      # where the downloads are stored
      - downloads:/downloads
    healthcheck:
      test: "curl -f http://localhost:8989 || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - nzb
      - torrent

  movies:
    environment:
      TZ: "${TZ}"
      PGID: "${PGID}"
      PUID: "${PUID}"
    image: "linuxserver/radarr:${RADARR_TAG}"
    restart: always
    volumes:
      - radarr_config:/config
      - movies:/movies
      - downloads:/downloads
    healthcheck:
      test: "curl -f http://localhost:7878 || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - nzb
      - torrent

  music:
    environment:
      TZ: "${TZ}"
      PGID: "${PGID}"
      PUID: "${PUID}"
    image: "linuxserver/lidarr:${LIDARR_TAG}"
    restart: always
    volumes:
      - lidarr_config:/config
      - music:/music
      - downloads:/downloads
    healthcheck:
      test: "curl -f http://localhost:8686 || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - nzb
      - torrent

  nzb:
    environment:
      TZ: "${TZ}"
      PGID: "${PGID}"
      PUID: "${PUID}"
    image: "linuxserver/nzbget:${NZBGET_TAG}"
    restart: always
    volumes:
      - nzbget_config:/config
      - downloads:/downloads
    healthcheck:
      test: "curl -f http://localhost:6789 || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5

  torrent:
    environment:
      TZ: "${TZ}"
      PGID: "${PGID}"
      PUID: "${PUID}"
    image: "linuxserver/transmission:${TRANSMISSION_TAG}"
    restart: always
    ports:
      - "${HOST_IP}:51413:51413"
      - "${HOST_IP}:51413:51413/udp"
    volumes:
      - transmission_config:/config
      - downloads:/downloads
      # optional watch folder not configured
    healthcheck:
      test: "curl -f http://localhost:9091 || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5

  torrent_aggregator:
    environment:
      TZ: "${TZ}"
      PGID: "${PGID}"
      PUID: "${PUID}"
    build: ./torrent_aggregator
    restart: always
    volumes:
      - jackett_config:/config
      # optional torrent blackhole for bulk downloads
      # - jackett_blackhole:/downloads
    healthcheck:
      test: "curl -f http://localhost:9117 || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5

  nzb_aggregator:
    environment:
      TZ: "${TZ}"
      PGID: "${PGID}"
      PUID: "${PUID}"
    build: ./nzb_aggregator
    restart: always
    volumes:
      - nzbhydra_config:/config
      # optional nzb blackhole for bulk downloads
      # - nzbhydra_blackhole:/downloads
    healthcheck:
      test: "curl -f http://localhost:5075 || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5

  subtitles:
    env_file:
      - ./subtitles.env
    environment:
      TZ: "${TZ}"
      PGID: "${PGID}"
      PUID: "${PUID}"
    build: ./subtitles
    restart: always
    volumes:
      - series:/series
      - movies:/movies

  backup:
    build: ./backup
    restart: always
    environment:
      BACKUP_PERIODICITY: "28 3 * * *"
    volumes:
      - sonarr_config:/live_data/sonarr:ro
      - radarr_config:/live_data/radarr:ro
      - lidarr_config:/live_data/lidarr:ro
      - nzbget_config:/live_data/nzbget:ro
      - jackett_config:/live_data/jackett:ro
      - transmission_config:/live_data/transmission:ro
      - tarsnap_cache:/usr/local/tarsnap-cache
      - ./files/tarsnap.key:/root/tarsnap.key:ro
      - ./files/tarsnap.conf:/usr/local/etc/tarsnap.conf:ro
      - ./files/tarsnapper.conf:/etc/tarsnapper.conf:ro

volumes:
  sonarr_config:
  radarr_config:
  lidarr_config:
  nzbget_config:
  transmission_config:
  jackett_config:
  nzbhydra_config:
  tarsnap_cache:
  series:
    driver_opts:
      type: none
      o: bind
      # mapping to a separate dir to customize which physical drive the data is
      # on. the os might be on a smaller ssd but have another hdd available to
      # store medias on
      device: /srv/tv_shows
  movies:
    driver_opts:
      type: none
      o: bind
      # mapping to a separate dir to customize which physical drive the data is
      # on. the os might be on a smaller ssd but have another hdd available to
      # store medias on
      device: /srv/movies
  music:
    driver_opts:
      type: none
      o: bind
      # mapping to a separate dir to customize which physical drive the data is
      # on. the os might be on a smaller ssd but have another hdd available to
      # store medias on
      device: /srv/music
  downloads:
    driver_opts:
      type: none
      o: bind
      # mapping to a separate dir to customize which physical drive the data is
      # on. the os might be on a smaller ssd but have another hdd available to
      # store medias on
      device: /srv/downloads
